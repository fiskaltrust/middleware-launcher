name: deb package
on: 
  workflow_dispatch:
  workflow_call:
    inputs:
      commit:
        type: string
        required: false
      version:
        type: string
        required: true
  # push:
  #   branches:
  #     - main
  #     - refs/tags/*
  # pull_request:
  #   branches:
  #     - main


jobs:
  test:
    name: deb-package
    strategy:
      matrix:
         target: [linux-x64, linux-arm, linux-arm64]
    runs-on: ubuntu-latest
    
    steps:        
    - uses: actions/checkout@v4
      
    - name: publish deb
      shell: pwsh
      id: publish-deb
      run: |
           $project = "fiskaltrust.Launcher"   
           $target = "${{ matrix.target }}"
           #$config = "${{ steps.set-config.outputs.config }}"
           $dropPath = "./publish/drop-$target"         
           
           echo "path=$dropPath" >> $env:GITHUB_OUTPUT           
          
           $projPath = "src/$project/$project.csproj"
           dotnet publish $projPath --configuration  Release -f net8.0 --output $dropPath -r $target --self-contained true -p:DebugType=None -p:DebugSymbols=false -p:GenerateRuntimeConfigurationFiles=false -p:PublishSingleFile=true
      
      # - uses: ./.github/actions/sign
      #   with:
      #     certificate: 'codesigning.pfx'
      #     password: '$(Code_Signing_Password)'
      #     path: ${{ steps.publish-deb.outputs.path }}

    - name: build deb package
      shell: pwsh
      id: build-deb
      run: | 
           $project = "fiskaltrust.Launcher"
           $target = "${{ matrix.target }}"
           $version = ${{input.version}}
           $dropPath = ${{ steps.publish-deb.outputs.path }}
           $debPath = "./publish/deb-$target"    
           
           $meta = Get-Content ./meta.json -Encoding UTF8 | ConvertFrom-Json
           $arch = $meta.deb.architectures."$target"
                   
           $base = "./publish/deb/$($meta.package.name)_$version-1_$arch"
           New-Item -ItemType Directory -Path "$base";
           New-Item -ItemType Directory -Path "$base/usr/bin";
           New-Item -ItemType Directory -Path "$base/DEBIAN";

           Move-Item $dropPath/$project "$base/usr/bin/"

           @(
            "Package: $($meta.package.name)";
            "Version: $version";
            "Maintainer: $($meta.package.maintainer)";
            "Depends: $($meta.deb.depends -join ', ')";
            "Architecture: $arch";
            "Homepage: $($meta.package.homepage)";
            "Description: $($meta.package.description)"
           ) -join "`n" | Set-Content -Path "$base/DEBIAN/control"

           dpkg --build $base

           dpkg-deb --info "$base.deb" | Write-Host

           dpkg-deb --contents "$base.deb" | Write-Host

           New-Item -ItemType Directory -Path $debPath
           Move-Item "$base.deb" $debPath
           echo "path=$dropPath" >> $env:GITHUB_OUTPUT 
    - name: Upload deb package
      uses: actions/upload-artifact@v4
      with:
         name: deb-${{ matrix.target }}
         path: ${{ steps.build-deb.outputs.path }}    

  meta:
    name: meta
    runs-on: ubuntu-latest
    
    steps:
      - name: meta
        shell: pwsh
        run: |
            New-Item -ItemType Directory -Path "meta"
            Move-Item meta.json meta/meta.json

      - name: Upload meta
        uses: actions/upload-artifact@v4
        with:
          name: meta
          path: meta
