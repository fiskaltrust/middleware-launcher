name: Package Launcher

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - refs/tags/*
  pull_request:
    branches:
      - main

jobs:
  test-launcher:
    uses: ./.github/workflows/test.yml
    permissions:
      checks: write
      pull-requests: write

  version:
    needs: [test-launcher]
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0

      - uses: ./.github/actions/version
        id: set-version
        with:
          project: fiskaltrust.Launcher
          path: src

  package:
    needs: [version]
    name: package
    strategy:
      matrix:
        include:
          - vmImage: windows-latest
            target: win-x64
            scriptFolder: "windows"

          - vmImage: windows-latest
            target: win-x86
            scriptFolder: "windows"

          - vmImage: ubuntu-latest
            target: linux-x64
            scriptFolder: "linux"

          - vmImage: ubuntu-latest
            target: linux-arm
            scriptFolder: "linux"

          - vmImage: ubuntu-latest
            target: linux-arm64
            scriptFolder: "linux"

          - vmImage: macos-latest
            target: osx-x64
            scriptFolder: "macos"

    runs-on: ${{ matrix.vmImage }}

    steps:
      - uses: actions/checkout@v4

      - name: Set build configuration
        id: set-config
        shell: bash
        run: |
          echo "GITHUB_REF=${GITHUB_REF}"
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
           echo "config=Release" >> $GITHUB_OUTPUT
          else
           echo "config=Debug" >> $GITHUB_OUTPUT
          fi

      - name: Copy executables
        shell: pwsh
        id: copy-executables
        run: |
          $projects = @("fiskaltrust.Launcher", "fiskaltrust.LauncherUpdater")
          $target = "${{ matrix.target }}"
          $config = "${{ steps.set-config.outputs.config }}"
          $dropPath = "./publish/drop-$target"
          $rawPath = "./publish/raw-$target"

          echo "path=$rawPath" >> $env:GITHUB_OUTPUT
          New-Item -ItemType Directory -Force -Path $rawPath
          foreach ($project in $projects) 
          {
            $projPath = "src/$project/$project.csproj"
            dotnet publish $projPath --configuration  $config -f net8.0 --output $dropPath -r $target --self-contained true -p:DebugType=None -p:DebugSymbols=false -p:GenerateRuntimeConfigurationFiles=false -p:PublishSingleFile=true
          }
          Get-ChildItem -Path "$dropPath/${projects[0]}*" -File | Where-Object { $_.Extension -ne ".json" } | copy-Item -Destination $rawPath

      - name: Run Sign Action on Windows only
        if: runner.os == 'Windows'
        uses: fiskaltrust/middleware/.github/actions/sign@main
        with:
          path: ${{ steps.copy-executables.outputs.path }}
          filter: "fiskaltrust.Launcher*"
          azureKeyVaultUrl: "${{ vars.CODESIGNING_AZURE_KEY_VAULT_URL }}"
          azureKeyVaultCertificate: "${{ vars.CODESIGNING_AZURE_KEY_VAULT_CERTIFICATE }}"
          azureKeyVaultClientId: "${{ secrets.CODESIGNING_AZURE_KEY_VAULT_CLIENT_ID }}"
          azureKeyVaultTenantId: "${{ secrets.CODESIGNING_AZURE_KEY_VAULT_TENANT_ID }}"
          azureKeyVaultClientSecret: "${{ secrets.CODESIGNING_AZURE_KEY_VAULT_SECRET }}"

      - name: Upload zip and hash of output package
        uses: ./.github/actions/zip-hash-package
        with:
          path: ${{ steps.copy-executables.outputs.path }}
          zipFileName: "fiskaltrust.Launcher-${{ needs.version.outputs.version }}"
          artifactName: "package-${{ matrix.target }}"

      - name: Copy README.md to scripts artifacts
        shell: pwsh
        run: |
          $readmePath = "./scripts/${{ matrix.scriptFolder }}/README.md"
          Copy-Item -Path ./README.md -Destination $readmePath
          (Get-Content $readmePath -Raw) -replace '(?s)<!-- BEGIN (CONTRIBUTING|LICENSE) -->.*?<!-- END (CONTRIBUTING|LICENSE) -->\s*', '' | Set-Content $readmePath

      - name: Upload zip of scripts
        uses: ./.github/actions/zip-package
        with:
          path: ./scripts/${{ matrix.scriptFolder }}/
          zipFileName: "fiskaltrust.Launcher-${{ needs.version.outputs.version }}"
          artifactName: "scripts-${{ matrix.target }}"

  deb-package:
    needs: [version]
    uses: ./.github/workflows/deb-package.yml
    with:
      version: ${{ needs.version.outputs.version }}
