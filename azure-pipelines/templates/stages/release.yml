parameters:
  - name: stages
    type: stageList

  - name: artifact
    type: string
    default: current

  - name: targets
    type: object
    default:
      - win-x64
      - win-x86
      - linux-x64
      - linux-arm
      - linux-arm64
      - osx-x64

stages:
  - ${{ each stage in parameters.stages }}:
      - ${{ each pair in stage }}:
          ${{ pair.key }}: ${{ pair.value }}
        
        displayName: Release ${{ stage.templateContext.environment }}
        
        ${{ if eq(stage.templateContext.environment, 'production') }}:
          condition: startsWith(variables['Build.SourceBranch'], 'refs/tags/v')
        
        jobs:
          - deployment: Release
            
            pool:
              vmImage: windows-latest
            
            environment: ${{ stage.templateContext.serviceConnection }}
            
            strategy:
              runOnce:
                deploy:
                  steps:

                    - ${{ each target in parameters.targets }}:
                        - download: ${{ parameters.artifact }}
                          artifact: package-${{ target }}
                          displayName: "[${{ target }}] Download artifact"

                    - ${{ each target in parameters.targets }}:
                        - task: AzureCLI@2
                          displayName: "[${{ target }}] Publish to blob storage"
                          inputs:
                            azureSubscription: ${{ stage.templateContext.serviceConnection }}
                            scriptType: ps
                            scriptLocation: inlineScript
                            inlineScript: |
                              $extension = if("${{ target }}" -match "win") { "zip" } else { "tar.gz" }
                              az storage blob upload-batch --account-name ${{ stage.templateContext.storage }} -d "packages/${{ target }}/fiskaltrust.Launcher/" -s "$(Pipeline.Workspace)/package-${{ target }}" --pattern "*.$extension*"

                    - download: ${{ parameters.artifact }}
                      artifact: scripts
                      displayName: "Download script artifacts"

                    - task: AzureCLI@2
                      displayName: "Publish scripts to blob storage"
                      inputs:
                        azureSubscription: ${{ stage.templateContext.serviceConnection }}
                        scriptType: ps
                        scriptLocation: inlineScript
                        inlineScript: |
                          az storage blob upload-batch --account-name ${{ stage.templateContext.storage }} -d "scripts/fiskaltrust.Launcher.Scripts/" -s "$(Pipeline.Workspace)/scripts/" --pattern "*.zip"